import sys
import numpy as np
import numpy
import sip
sip.setapi('QString', 2)
sip.setapi('QVariant', 2)
from PyQt4 import QtGui, QtCore
from PyQt4.QtGui import QApplication, QLineEdit, QTextEdit, QPlainTextEdit


class MyWindow(QtGui.QTextEdit):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        atoms=np.genfromtxt('dump.coordss', delimiter=" ", names=True)
        numatoms=len(atoms)
        xa=atoms['x']
        ya=atoms['y']
        self.shots=[]
        self.by=[]
        for i in range(numatoms):
            self.b =QtGui.QPushButton(self)
            self.b.setText(str(i))
            self.b.setObjectName('%d' % i)
            self.b.resize(8,8)
            self.b.move(40.0+xa[i]*10.0,25+ya[i]*10)

            self.button_clicks = 0
            self.button_clicks1=0

            self.b.setStyleSheet("QPushButton { background-color: green}")  
 
            self.b.clicked.connect(self.on_b_clicked)

        self.label =QtGui.QLabel("Position of atom: ",self)
        self.label.move(25,38+ya[7998]*10)
        self.e1 = QPlainTextEdit(self)
        self.e1.resize(25+xa[7998]*10,150)
        self.e1.move(40,60+ya[7998]*10)
        
  


        


    def on_b_clicked(self):
        atoms=np.genfromtxt('dump.coordss', delimiter=" ", names=True)
        numatoms=len(atoms)
        xa=atoms['x']
        ya=atoms['y']
        sender = self.sender()
        if int(sender.objectName()) % 2!=0:
            self.button_clicks =self.button_clicks+int(sender.objectName())
            if self.button_clicks % 2!=0:
                self.e1.appendPlainText("Atom No:"+str(sender.objectName())+" "+"x:"+str(xa[int(sender.objectName())])+"  "+"y:"+str(ya[int(sender.objectName())])+ "\n")
                
                sender.setStyleSheet("QPushButton { background-color: red }")
            else:
                sender.setStyleSheet("QPushButton { background-color: green }")         
                cursor = self.e1.textCursor()
        # Setup the desired format for matches
                format = QtGui.QTextCharFormat()
                format.setBackground(QtGui.QBrush(QtGui.QColor("black")))
        # Setup the regex engine
                a=str(sender.objectName())
                b=str(xa[int(sender.objectName())])
                c=str(ya[int(sender.objectName())])
                pattern = "Atom:"
                regex = QtCore.QRegExp(a)
        # Process the displayed document
                pos = 0
                index = regex.indexIn(self.e1.toPlainText(), pos)
                while (index != -1):
            # Select the matched text and apply the desired format
                    cursor.setPosition(index)
                    #cursor.setPosition(QtGui.QTextCursor.EndOfWord, QtGui.QTextCursor.KeepAnchor)
                    cursor.movePosition(QtGui.QTextCursor.EndOfWord, 0)
                    #self.e1.setTextCursor(cursor)
                    #textSelected = cursor.selectedText()
                    cursor.mergeCharFormat(format)
                    #cursor.insertText("x")
                    #self.e1.textCursor().insertText('X')
                    #copyAvailable(True)
  
                    #self.e1.cut()
            # Move to the next match
                    #pos = index + regex.matchedLength()
                    #index = regex.indexIn(self.e1.toPlainText(), pos)

                
                #self.e1.append("sddfg")
                #self.e1.undo()
        if int(sender.objectName()) % 2==0:
            self.button_clicks1 =self.button_clicks1+int(sender.objectName())+1
            if self.button_clicks1 % 2!=0:
                self.e1.appendPlainText("Atom No:"+str(sender.objectName())+" "+"x:"+str(xa[int(sender.objectName())])+"  "+"y:"+str(ya[int(sender.objectName())])+ "\n")
                sender.setStyleSheet("QPushButton { background-color: red}")
            else:
                sender.setStyleSheet("QPushButton { background-color: green }")
                cursor = self.e1.textCursor()
        # Setup the desired format for matches
                format = QtGui.QTextCharFormat()
                format.setBackground(QtGui.QBrush(QtGui.QColor("red")))
        # Setup the regex engine
                a=str(sender.objectName())
                b=str(xa[int(sender.objectName())])
                c=str(ya[int(sender.objectName())])
                pattern = "Atom"+"No"
                regex = QtCore.QRegExp(a)
        # Process the displayed document
                pos = 0
                index = regex.indexIn(self.e1.toPlainText(), pos)
                while (index != -1):
            # Select the matched text and apply the desired format
                    cursor.setPosition(index)
                    cursor.movePosition(QtGui.QTextCursor.EndOfWord, 1)
                    cursor.mergeCharFormat(format)
                    #self.e1.cut(self)
            # Move to the next match
                    pos = index + regex.matchedLength()
                    index = regex.indexIn(self.e1.toPlainText(), pos)

                             
        print self.button_clicks


app=QApplication(sys.argv)

if __name__ == '__main__':
    MyWindow()
    w=MyWindow()
    w.setGeometry(1200, 1200, 1200, 1200)
    w.setWindowTitle('Lattice Structure')   
    w.show()
    sys.exit(app.exec_())

